{
    "oracleUrl": "https://oracle.deri.finance/price/",
    "bscProviderUrl":"https://data-seed-prebsc-2-s1.binance.org:8545/",
    "databaseAddress": "0xd8137F05c1F432A80525053c473d0e286c4F46f0",
    "bscurl":[
        "https://data-seed-prebsc-1-s1.binance.org:8545/",
        "https://data-seed-prebsc-2-s1.binance.org:8545/",
        "https://data-seed-prebsc-1-s2.binance.org:8545/",
        "https://data-seed-prebsc-2-s2.binance.org:8545/",
        "https://data-seed-prebsc-1-s3.binance.org:8545/",
        "https://data-seed-prebsc-2-s3.binance.org:8545/"
    ],
    "deriAddress":"0x3C125824a889B46f039ab7449b70AF5b8466F3cf",
    "deriDataBaseAbi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"newController","type":"address"}],"name":"addController","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"controllers","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"oldController","type":"address"}],"name":"delController","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fromChainId","type":"uint256"},{"internalType":"address","name":"fromWormhole","type":"address"},{"internalType":"uint256","name":"toChainId","type":"uint256"},{"internalType":"address","name":"toWormhole","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct Database.Params1[]","name":"values","type":"tuple[]"}],"name":"setSignature","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"signature","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fromChainId","type":"uint256"},{"internalType":"address","name":"fromWormhole","type":"address"},{"internalType":"uint256","name":"toChainId","type":"uint256"},{"internalType":"address","name":"toWormhole","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"},{"internalType":"bool","name":"valid","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"values","type":"address[]"}],"name":"unsetSignature","outputs":[],"stateMutability":"nonpayable","type":"function"}],
    "ropstenProviderUrl": "https://ropsten.infura.io/v3/194f1b2b258e45ad9e50d5e30f2ec8bb", 
    "addresses":[
        [
            {
            
                "DeriVote": "0xb2b6907AdDa5a13673849CBD448f31be9C4A7424",
                "chanId":"1"
            }
        ],
        [
            {
            
                "DeriVote": "0x27c116474D4E08df0A13935AF508E8922271F891",
                "chanId":"56"
            }
        ],
        [
            {
            
                "DeriVote": "0x3752D67bfBe945a89787c7F6758A47C2D52988d4",
                "chanId":"128"
            }
        ]
        
         
    ],
    
    "abifiles": {
        "DeriVote": "DeriVote.abi"
    },

    "methods": {
        "symbol": "symbol",
        "decimals": "decimals",
        "totalSupply": "totalSupply",
        "balanceOf": "balanceOf",
        "allowance": "allowance",
        "approve": "approve",
        "getParameters": "getParameters",
        "getPosition": "getPosition(address)",
        "getStateValues": "getStateValues",
        "depositMargin": "depositMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)",
        "withdrawMargin": "withdrawMargin(uint256,uint256,uint256,uint8,bytes32,bytes32)",
        "addLiquidity": "addLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)",
        "removeLiquidity": "removeLiquidity(uint256,uint256,uint256,uint8,bytes32,bytes32)",
        "tradeWithMargin": "tradeWithMargin(int256,uint256,uint256,uint256,uint8,bytes32,bytes32)"
    }
}
